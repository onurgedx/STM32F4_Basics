/*
 * bmp180.c
 *
 *  Created on: Nov 28, 2024
 *      Author: Onur Gedik
 */

#include "bmp180.h"

void BMP180_Init()
{
	if(HAL_I2C_IsDeviceReady(&hi2c1, BMP180_DEVICE_WRITE_REGISTER_ADDRESS, 1, 100)!=HAL_OK)
	{

		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
	}

	BMP180_GetCalibration_Value();

}

void BMP180_GetCalibration()
{

}

BMP180_CalibrationValues calibrationValues = {0};

void BMP180_GetCalibration_Value()
{
	uint8_t calibBuff[BMP180_CALIBRATION_VALUE_LENGTH] = {0};
	/**
	  * @brief  Read an amount of data in blocking mode from a specific memory address
	  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
	  *                the configuration information for the specified I2C.
	  * @param  DevAddress Target device address: The device 7 bits address value
	  *         in datasheet must be shifted to the left before calling the interface
	  * @param  MemAddress Internal memory address
	  * @param  MemAddSize Size of internal memory address
	  * @param  pData Pointer to data buffer
	  * @param  Size Amount of data to be sent
	  * @param  Timeout Timeout duration
	  * @retval HAL status
	  */
if(	HAL_I2C_Mem_Read(&hi2c1, BMP180_DEVICE_READ_REGISTER_ADDRESS, BMP180_CALIBRATION_START_ADRESS, 1, calibBuff, BMP180_CALIBRATION_VALUE_LENGTH, 100)==HAL_OK)
{


}

}


